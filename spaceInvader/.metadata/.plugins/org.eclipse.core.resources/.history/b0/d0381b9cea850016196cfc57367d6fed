/*
 * interface.c
 *
 *  Created on: Sep 21, 2016
 *      Author: superman
 */

#include <stdio.h>
#include "platform.h"
#include "xparameters.h"
#include "xaxivdma.h"
#include "xio.h"
#include "time.h"
#include "unistd.h"
#define TANK_HEIGHT 8

// Packs each horizontal line of the figures into a single 32 bit word.
#define packword15(b14,b13,b12,b11,b10,b9,b8,b7,b6,b5,b4,b3,b2,b1,b0)  \
((b14 << 14) | (b13 << 13) | (b12 << 12) | (b11 << 11) | (b10 << 10) | \
 (b9  << 9 ) | (b8  << 8 ) | (b7  << 7 ) | (b6  << 6 ) | (b5  << 5 ) | \
 (b4  << 4 ) | (b3  << 3 ) | (b2  << 2 ) | (b1  << 1 ) | (b0  << 0 ) )

 // This seems like a *very bad* way to store the tank data, but this is what
 // we are doing for the moment.
static const int tank_15x8[TANK_HEIGHT] =
{
packword15(0,0,0,0,0,0,0,1,0,0,0,0,0,0,0),
packword15(0,0,0,0,0,0,1,1,1,0,0,0,0,0,0),
packword15(0,0,0,0,0,0,1,1,1,0,0,0,0,0,0),
packword15(0,1,1,1,1,1,1,1,1,1,1,1,1,1,0),
packword15(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
packword15(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
packword15(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
packword15(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
};

#define WORD_WIDTH 15



void draw_line(unsigned int * framePointer){
	int row, col;
	for(row=450;row<452;row++){
		 for(col=0;col<640;col++){
			 framePointer[(row)*640 + col] = 0x0000FF00;
		 }
	}
}


void draw_tanks(unsigned int * framePointer){
	 int row, col;
	 for(row=0;row<TANK_HEIGHT;row++){
		 for(col=0;col<WORD_WIDTH;col++){
			 if((tank_15x8[row] & (1<<(WORD_WIDTH-col-1)))) {
				 framePointer[(row+5)*1280 + (col + 500)*2] = 0x0000FF00;
				 framePointer[(row+5)*1280 + (col + 550)*2] = 0x0000FF00;
				 framePointer[(row+5)*1280 + (col + 600)*2] = 0x0000FF00;

				 framePointer[(row+5)*1280 + (col + 500)*2+1] = 0x0000FF00;
				 framePointer[(row+5)*1280 + (col + 550)*2+1] = 0x0000FF00;
				 framePointer[(row+5)*1280 + (col + 600)*2+1] = 0x0000FF00;

				 framePointer[(row+5)*1280 + 640 + (col + 500)*2+1] = 0x0000FF00;
				 framePointer[(row+5)*1280 + 640 + (col + 550)*2+1] = 0x0000FF00;
				 framePointer[(row+5)*1280 + 640 + (col + 600)*2+1] = 0x0000FF00;

				 framePointer[(row+5)*1280 + 640 + (col + 500)*2] = 0x0000FF00;
				 framePointer[(row+5)*1280 + 640 + (col + 550)*2] = 0x0000FF00;
				 framePointer[(row+5)*1280 + 640 + (col + 600)*2] = 0x0000FF00;
			 }
		 }
	 }
}
